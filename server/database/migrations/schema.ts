import { mysqlTable, mysqlSchema, AnyMySqlColumn, int, varchar, date, float, datetime, index, tinyint, foreignKey, unique } from "drizzle-orm/mysql-core"
import { sql } from "drizzle-orm"

export const logs = mysqlTable("logs", {
	id: int().autoincrement().notNull(),
	name: varchar({ length: 100 }).notNull(),
	category: varchar({ length: 50 }).notNull(),
	subcategory: varchar({ length: 50 }).notNull(),
	status: varchar({ length: 50 }).notNull(),
	assignedTo: varchar({ length: 100 }).default('NULL'),
	location: varchar({ length: 100 }).default('NULL'),
	// you can use { mode: 'date' }, if you want to have Date as type for this column
	purchaseDate: date({ mode: 'string' }).default('NULL'),
	value: float().default('NULL'),
	createdAt: datetime({ mode: 'string'}).notNull(),
	updatedAt: datetime({ mode: 'string'}).notNull(),
	serialNumber: varchar({ length: 100 }).default('NULL'),
});

export const logStack = mysqlTable("log_stack", {
	id: int().autoincrement().notNull(),
	logId: int("log_id").notNull().references(() => logs.id, { onDelete: "restrict", onUpdate: "restrict" } ),
	stackId: int("stack_id").notNull().references(() => stacks.id, { onDelete: "restrict", onUpdate: "restrict" } ),
},
(table) => [
	index("log_id").on(table.logId),
	index("stack_id").on(table.stackId),
]);

export const stacks = mysqlTable("stacks", {
	id: int().autoincrement().notNull(),
	title: varchar({ length: 50 }).notNull(),
	description: varchar({ length: 50 }).notNull(),
	createdAt: datetime({ mode: 'string'}).notNull(),
	updatedAt: datetime({ mode: 'string'}).notNull(),
});

export const users = mysqlTable("users", {
	id: int().autoincrement().notNull(),
	firstName: varchar({ length: 255 }).notNull(),
	lastName: varchar({ length: 255 }).notNull(),
	email: varchar({ length: 255 }).notNull(),
	password: varchar({ length: 255 }).notNull(),
	isAdmin: tinyint().default(0).notNull(),
	createdAt: datetime({ mode: 'string'}).notNull(),
	updatedAt: datetime({ mode: 'string'}).notNull(),
},
(table) => [
	unique("email").on(table.email),
	unique("email_2").on(table.email),
	unique("email_3").on(table.email),
	unique("email_4").on(table.email),
	unique("email_5").on(table.email),
	unique("email_6").on(table.email),
	unique("email_7").on(table.email),
	unique("email_8").on(table.email),
	unique("email_9").on(table.email),
	unique("email_10").on(table.email),
	unique("email_11").on(table.email),
	unique("email_12").on(table.email),
	unique("email_13").on(table.email),
	unique("email_14").on(table.email),
	unique("email_15").on(table.email),
	unique("email_16").on(table.email),
	unique("email_17").on(table.email),
	unique("email_18").on(table.email),
	unique("email_19").on(table.email),
	unique("email_20").on(table.email),
	unique("email_21").on(table.email),
	unique("email_22").on(table.email),
	unique("email_23").on(table.email),
	unique("email_24").on(table.email),
	unique("email_25").on(table.email),
	unique("email_26").on(table.email),
	unique("email_27").on(table.email),
	unique("email_28").on(table.email),
	unique("email_29").on(table.email),
	unique("email_30").on(table.email),
	unique("email_31").on(table.email),
	unique("email_32").on(table.email),
	unique("email_33").on(table.email),
	unique("email_34").on(table.email),
	unique("email_35").on(table.email),
	unique("email_36").on(table.email),
	unique("email_37").on(table.email),
	unique("email_38").on(table.email),
	unique("email_39").on(table.email),
	unique("email_40").on(table.email),
	unique("email_41").on(table.email),
	unique("email_42").on(table.email),
	unique("email_43").on(table.email),
	unique("email_44").on(table.email),
	unique("email_45").on(table.email),
	unique("email_46").on(table.email),
	unique("email_47").on(table.email),
	unique("email_48").on(table.email),
	unique("email_49").on(table.email),
	unique("email_50").on(table.email),
	unique("email_51").on(table.email),
	unique("email_52").on(table.email),
	unique("email_53").on(table.email),
	unique("email_54").on(table.email),
	unique("email_55").on(table.email),
]);
